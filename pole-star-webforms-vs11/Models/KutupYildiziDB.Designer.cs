//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Achievement_AchievementType", "AchievementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.AchievementType), "Achievement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Achievement), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Achievement_GlobalType", "GlobalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.GlobalType), "Achievement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Achievement), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Achievement_ResultType", "ResultType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.ResultType), "Achievement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Achievement), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_AchievementClub_Achievement", "Achievement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Achievement), "AchievementClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AchievementClub), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_AchievementPerson_Achievement", "Achievement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Achievement), "AchievementPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AchievementPerson), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_AchievementClub_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Club), "AchievementClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AchievementClub), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_AchievementPerson_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "AchievementPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AchievementPerson), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_AdministrativeBoard_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "AdministrativeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AdministrativeBoard), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_AdministrativeBoard_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Role), "AdministrativeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AdministrativeBoard), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Administrator_Club1", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Club), "AdministrativeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.AdministrativeBoard), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_ClubMember_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Club), "ClubMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.ClubMember), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Event_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Club), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Event), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_SocialMediaClub_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Club), "SocialMediaClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.SocialMediaClub), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_UserFollowClub_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Club), "PersonFollowClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.PersonFollowClub), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_ClubMember_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "ClubMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.ClubMember), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Person_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Department), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Person), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Device_DeviceType", "DeviceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.DeviceType), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Device), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Device_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Device), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_UserEventAttend_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Event), "PersonEventAttend", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.PersonEventAttend), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Result_GlobalType", "GlobalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.GlobalType), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Result), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Timeline_GlobalType1", "GlobalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.GlobalType), "Timeline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Timeline), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Person_University", "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.University), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Person), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_PersonEventAttend_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "PersonEventAttend", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.PersonEventAttend), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_PersonFollowClub_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "PersonFollowClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.PersonFollowClub), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_SocialMediaPerson_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.Person), "SocialMediaPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.SocialMediaPerson), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_Result_ResultType", "ResultType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.ResultType), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.Result), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_SocialMediaClub_SocialMedia", "SocialMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.SocialMedia), "SocialMediaClub", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.SocialMediaClub), true)]
[assembly: EdmRelationshipAttribute("KutupYildiziDBModel", "FK_SocialMediaPerson_SocialMedia", "SocialMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PoleStarWebVS11.Models.SocialMedia), "SocialMediaPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PoleStarWebVS11.Models.SocialMediaPerson), true)]

#endregion

namespace PoleStarWebVS11.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class KutupYildiziDBEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new KutupYildiziDBEntities1 object using the connection string found in the 'KutupYildiziDBEntities1' section of the application configuration file.
        /// </summary>
        public KutupYildiziDBEntities1() : base("name=KutupYildiziDBEntities1", "KutupYildiziDBEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KutupYildiziDBEntities1 object.
        /// </summary>
        public KutupYildiziDBEntities1(string connectionString) : base(connectionString, "KutupYildiziDBEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KutupYildiziDBEntities1 object.
        /// </summary>
        public KutupYildiziDBEntities1(EntityConnection connection) : base(connection, "KutupYildiziDBEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Achievement> Achievement
        {
            get
            {
                if ((_Achievement == null))
                {
                    _Achievement = base.CreateObjectSet<Achievement>("Achievement");
                }
                return _Achievement;
            }
        }
        private ObjectSet<Achievement> _Achievement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AchievementClub> AchievementClub
        {
            get
            {
                if ((_AchievementClub == null))
                {
                    _AchievementClub = base.CreateObjectSet<AchievementClub>("AchievementClub");
                }
                return _AchievementClub;
            }
        }
        private ObjectSet<AchievementClub> _AchievementClub;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AchievementPerson> AchievementPerson
        {
            get
            {
                if ((_AchievementPerson == null))
                {
                    _AchievementPerson = base.CreateObjectSet<AchievementPerson>("AchievementPerson");
                }
                return _AchievementPerson;
            }
        }
        private ObjectSet<AchievementPerson> _AchievementPerson;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AchievementType> AchievementType
        {
            get
            {
                if ((_AchievementType == null))
                {
                    _AchievementType = base.CreateObjectSet<AchievementType>("AchievementType");
                }
                return _AchievementType;
            }
        }
        private ObjectSet<AchievementType> _AchievementType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdministrativeBoard> AdministrativeBoard
        {
            get
            {
                if ((_AdministrativeBoard == null))
                {
                    _AdministrativeBoard = base.CreateObjectSet<AdministrativeBoard>("AdministrativeBoard");
                }
                return _AdministrativeBoard;
            }
        }
        private ObjectSet<AdministrativeBoard> _AdministrativeBoard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Club> Club
        {
            get
            {
                if ((_Club == null))
                {
                    _Club = base.CreateObjectSet<Club>("Club");
                }
                return _Club;
            }
        }
        private ObjectSet<Club> _Club;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClubMember> ClubMember
        {
            get
            {
                if ((_ClubMember == null))
                {
                    _ClubMember = base.CreateObjectSet<ClubMember>("ClubMember");
                }
                return _ClubMember;
            }
        }
        private ObjectSet<ClubMember> _ClubMember;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Department
        {
            get
            {
                if ((_Department == null))
                {
                    _Department = base.CreateObjectSet<Department>("Department");
                }
                return _Department;
            }
        }
        private ObjectSet<Department> _Department;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Device
        {
            get
            {
                if ((_Device == null))
                {
                    _Device = base.CreateObjectSet<Device>("Device");
                }
                return _Device;
            }
        }
        private ObjectSet<Device> _Device;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceType> DeviceType
        {
            get
            {
                if ((_DeviceType == null))
                {
                    _DeviceType = base.CreateObjectSet<DeviceType>("DeviceType");
                }
                return _DeviceType;
            }
        }
        private ObjectSet<DeviceType> _DeviceType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Event
        {
            get
            {
                if ((_Event == null))
                {
                    _Event = base.CreateObjectSet<Event>("Event");
                }
                return _Event;
            }
        }
        private ObjectSet<Event> _Event;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalType> GlobalType
        {
            get
            {
                if ((_GlobalType == null))
                {
                    _GlobalType = base.CreateObjectSet<GlobalType>("GlobalType");
                }
                return _GlobalType;
            }
        }
        private ObjectSet<GlobalType> _GlobalType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Person
        {
            get
            {
                if ((_Person == null))
                {
                    _Person = base.CreateObjectSet<Person>("Person");
                }
                return _Person;
            }
        }
        private ObjectSet<Person> _Person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonEventAttend> PersonEventAttend
        {
            get
            {
                if ((_PersonEventAttend == null))
                {
                    _PersonEventAttend = base.CreateObjectSet<PersonEventAttend>("PersonEventAttend");
                }
                return _PersonEventAttend;
            }
        }
        private ObjectSet<PersonEventAttend> _PersonEventAttend;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonFollowClub> PersonFollowClub
        {
            get
            {
                if ((_PersonFollowClub == null))
                {
                    _PersonFollowClub = base.CreateObjectSet<PersonFollowClub>("PersonFollowClub");
                }
                return _PersonFollowClub;
            }
        }
        private ObjectSet<PersonFollowClub> _PersonFollowClub;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Result
        {
            get
            {
                if ((_Result == null))
                {
                    _Result = base.CreateObjectSet<Result>("Result");
                }
                return _Result;
            }
        }
        private ObjectSet<Result> _Result;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultType> ResultType
        {
            get
            {
                if ((_ResultType == null))
                {
                    _ResultType = base.CreateObjectSet<ResultType>("ResultType");
                }
                return _ResultType;
            }
        }
        private ObjectSet<ResultType> _ResultType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialMedia> SocialMedia
        {
            get
            {
                if ((_SocialMedia == null))
                {
                    _SocialMedia = base.CreateObjectSet<SocialMedia>("SocialMedia");
                }
                return _SocialMedia;
            }
        }
        private ObjectSet<SocialMedia> _SocialMedia;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialMediaClub> SocialMediaClub
        {
            get
            {
                if ((_SocialMediaClub == null))
                {
                    _SocialMediaClub = base.CreateObjectSet<SocialMediaClub>("SocialMediaClub");
                }
                return _SocialMediaClub;
            }
        }
        private ObjectSet<SocialMediaClub> _SocialMediaClub;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialMediaPerson> SocialMediaPerson
        {
            get
            {
                if ((_SocialMediaPerson == null))
                {
                    _SocialMediaPerson = base.CreateObjectSet<SocialMediaPerson>("SocialMediaPerson");
                }
                return _SocialMediaPerson;
            }
        }
        private ObjectSet<SocialMediaPerson> _SocialMediaPerson;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Timeline> Timeline
        {
            get
            {
                if ((_Timeline == null))
                {
                    _Timeline = base.CreateObjectSet<Timeline>("Timeline");
                }
                return _Timeline;
            }
        }
        private ObjectSet<Timeline> _Timeline;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<University> University
        {
            get
            {
                if ((_University == null))
                {
                    _University = base.CreateObjectSet<University>("University");
                }
                return _University;
            }
        }
        private ObjectSet<University> _University;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Achievement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchievement(Achievement achievement)
        {
            base.AddObject("Achievement", achievement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AchievementClub EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchievementClub(AchievementClub achievementClub)
        {
            base.AddObject("AchievementClub", achievementClub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AchievementPerson EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchievementPerson(AchievementPerson achievementPerson)
        {
            base.AddObject("AchievementPerson", achievementPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AchievementType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchievementType(AchievementType achievementType)
        {
            base.AddObject("AchievementType", achievementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdministrativeBoard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministrativeBoard(AdministrativeBoard administrativeBoard)
        {
            base.AddObject("AdministrativeBoard", administrativeBoard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Club EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClub(Club club)
        {
            base.AddObject("Club", club);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClubMember EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClubMember(ClubMember clubMember)
        {
            base.AddObject("ClubMember", clubMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Department EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartment(Department department)
        {
            base.AddObject("Department", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Device EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevice(Device device)
        {
            base.AddObject("Device", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceType(DeviceType deviceType)
        {
            base.AddObject("DeviceType", deviceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Event EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvent(Event @event)
        {
            base.AddObject("Event", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalType(GlobalType globalType)
        {
            base.AddObject("GlobalType", globalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerson(Person person)
        {
            base.AddObject("Person", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonEventAttend EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonEventAttend(PersonEventAttend personEventAttend)
        {
            base.AddObject("PersonEventAttend", personEventAttend);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonFollowClub EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonFollowClub(PersonFollowClub personFollowClub)
        {
            base.AddObject("PersonFollowClub", personFollowClub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Result EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResult(Result result)
        {
            base.AddObject("Result", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultType(ResultType resultType)
        {
            base.AddObject("ResultType", resultType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialMedia EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialMedia(SocialMedia socialMedia)
        {
            base.AddObject("SocialMedia", socialMedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialMediaClub EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialMediaClub(SocialMediaClub socialMediaClub)
        {
            base.AddObject("SocialMediaClub", socialMediaClub);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialMediaPerson EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialMediaPerson(SocialMediaPerson socialMediaPerson)
        {
            base.AddObject("SocialMediaPerson", socialMediaPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Timeline EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeline(Timeline timeline)
        {
            base.AddObject("Timeline", timeline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the University EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversity(University university)
        {
            base.AddObject("University", university);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Achievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Achievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Achievement object.
        /// </summary>
        /// <param name="achievementID">Initial value of the AchievementID property.</param>
        /// <param name="achievementNameTR">Initial value of the AchievementNameTR property.</param>
        /// <param name="achievementNameENG">Initial value of the AchievementNameENG property.</param>
        /// <param name="achievementPoint">Initial value of the AchievementPoint property.</param>
        /// <param name="achievementRequiredCount">Initial value of the AchievementRequiredCount property.</param>
        /// <param name="achievementTypeID">Initial value of the AchievementTypeID property.</param>
        /// <param name="globalTypeID">Initial value of the GlobalTypeID property.</param>
        /// <param name="resultTypeID">Initial value of the ResultTypeID property.</param>
        public static Achievement CreateAchievement(global::System.Int32 achievementID, global::System.String achievementNameTR, global::System.String achievementNameENG, global::System.Int32 achievementPoint, global::System.Int32 achievementRequiredCount, global::System.Int32 achievementTypeID, global::System.Int32 globalTypeID, global::System.Int32 resultTypeID)
        {
            Achievement achievement = new Achievement();
            achievement.AchievementID = achievementID;
            achievement.AchievementNameTR = achievementNameTR;
            achievement.AchievementNameENG = achievementNameENG;
            achievement.AchievementPoint = achievementPoint;
            achievement.AchievementRequiredCount = achievementRequiredCount;
            achievement.AchievementTypeID = achievementTypeID;
            achievement.GlobalTypeID = globalTypeID;
            achievement.ResultTypeID = resultTypeID;
            return achievement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementID
        {
            get
            {
                return _AchievementID;
            }
            set
            {
                if (_AchievementID != value)
                {
                    OnAchievementIDChanging(value);
                    ReportPropertyChanging("AchievementID");
                    _AchievementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievementID");
                    OnAchievementIDChanged();
                }
            }
        }
        private global::System.Int32 _AchievementID;
        partial void OnAchievementIDChanging(global::System.Int32 value);
        partial void OnAchievementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AchievementNameTR
        {
            get
            {
                return _AchievementNameTR;
            }
            set
            {
                OnAchievementNameTRChanging(value);
                ReportPropertyChanging("AchievementNameTR");
                _AchievementNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AchievementNameTR");
                OnAchievementNameTRChanged();
            }
        }
        private global::System.String _AchievementNameTR;
        partial void OnAchievementNameTRChanging(global::System.String value);
        partial void OnAchievementNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AchievementNameENG
        {
            get
            {
                return _AchievementNameENG;
            }
            set
            {
                OnAchievementNameENGChanging(value);
                ReportPropertyChanging("AchievementNameENG");
                _AchievementNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AchievementNameENG");
                OnAchievementNameENGChanged();
            }
        }
        private global::System.String _AchievementNameENG;
        partial void OnAchievementNameENGChanging(global::System.String value);
        partial void OnAchievementNameENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AchievementIconURL
        {
            get
            {
                return _AchievementIconURL;
            }
            set
            {
                OnAchievementIconURLChanging(value);
                ReportPropertyChanging("AchievementIconURL");
                _AchievementIconURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AchievementIconURL");
                OnAchievementIconURLChanged();
            }
        }
        private global::System.String _AchievementIconURL;
        partial void OnAchievementIconURLChanging(global::System.String value);
        partial void OnAchievementIconURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementPoint
        {
            get
            {
                return _AchievementPoint;
            }
            set
            {
                OnAchievementPointChanging(value);
                ReportPropertyChanging("AchievementPoint");
                _AchievementPoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchievementPoint");
                OnAchievementPointChanged();
            }
        }
        private global::System.Int32 _AchievementPoint;
        partial void OnAchievementPointChanging(global::System.Int32 value);
        partial void OnAchievementPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementRequiredCount
        {
            get
            {
                return _AchievementRequiredCount;
            }
            set
            {
                OnAchievementRequiredCountChanging(value);
                ReportPropertyChanging("AchievementRequiredCount");
                _AchievementRequiredCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchievementRequiredCount");
                OnAchievementRequiredCountChanged();
            }
        }
        private global::System.Int32 _AchievementRequiredCount;
        partial void OnAchievementRequiredCountChanging(global::System.Int32 value);
        partial void OnAchievementRequiredCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementTypeID
        {
            get
            {
                return _AchievementTypeID;
            }
            set
            {
                OnAchievementTypeIDChanging(value);
                ReportPropertyChanging("AchievementTypeID");
                _AchievementTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchievementTypeID");
                OnAchievementTypeIDChanged();
            }
        }
        private global::System.Int32 _AchievementTypeID;
        partial void OnAchievementTypeIDChanging(global::System.Int32 value);
        partial void OnAchievementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalTypeID
        {
            get
            {
                return _GlobalTypeID;
            }
            set
            {
                OnGlobalTypeIDChanging(value);
                ReportPropertyChanging("GlobalTypeID");
                _GlobalTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GlobalTypeID");
                OnGlobalTypeIDChanged();
            }
        }
        private global::System.Int32 _GlobalTypeID;
        partial void OnGlobalTypeIDChanging(global::System.Int32 value);
        partial void OnGlobalTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultTypeID
        {
            get
            {
                return _ResultTypeID;
            }
            set
            {
                OnResultTypeIDChanging(value);
                ReportPropertyChanging("ResultTypeID");
                _ResultTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultTypeID");
                OnResultTypeIDChanged();
            }
        }
        private global::System.Int32 _ResultTypeID;
        partial void OnResultTypeIDChanging(global::System.Int32 value);
        partial void OnResultTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Achievement_AchievementType", "AchievementType")]
        public AchievementType AchievementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AchievementType>("KutupYildiziDBModel.FK_Achievement_AchievementType", "AchievementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AchievementType>("KutupYildiziDBModel.FK_Achievement_AchievementType", "AchievementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AchievementType> AchievementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AchievementType>("KutupYildiziDBModel.FK_Achievement_AchievementType", "AchievementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AchievementType>("KutupYildiziDBModel.FK_Achievement_AchievementType", "AchievementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Achievement_GlobalType", "GlobalType")]
        public GlobalType GlobalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Achievement_GlobalType", "GlobalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Achievement_GlobalType", "GlobalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GlobalType> GlobalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Achievement_GlobalType", "GlobalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Achievement_GlobalType", "GlobalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Achievement_ResultType", "ResultType")]
        public ResultType ResultType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultType>("KutupYildiziDBModel.FK_Achievement_ResultType", "ResultType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultType>("KutupYildiziDBModel.FK_Achievement_ResultType", "ResultType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResultType> ResultTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultType>("KutupYildiziDBModel.FK_Achievement_ResultType", "ResultType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResultType>("KutupYildiziDBModel.FK_Achievement_ResultType", "ResultType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementClub_Achievement", "AchievementClub")]
        public EntityCollection<AchievementClub> AchievementClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementClub>("KutupYildiziDBModel.FK_AchievementClub_Achievement", "AchievementClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementClub>("KutupYildiziDBModel.FK_AchievementClub_Achievement", "AchievementClub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementPerson_Achievement", "AchievementPerson")]
        public EntityCollection<AchievementPerson> AchievementPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementPerson>("KutupYildiziDBModel.FK_AchievementPerson_Achievement", "AchievementPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementPerson>("KutupYildiziDBModel.FK_AchievementPerson_Achievement", "AchievementPerson", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="AchievementClub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AchievementClub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchievementClub object.
        /// </summary>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="achievementID">Initial value of the AchievementID property.</param>
        /// <param name="completedDate">Initial value of the CompletedDate property.</param>
        public static AchievementClub CreateAchievementClub(global::System.Int32 clubID, global::System.Int32 achievementID, global::System.DateTime completedDate)
        {
            AchievementClub achievementClub = new AchievementClub();
            achievementClub.ClubID = clubID;
            achievementClub.AchievementID = achievementID;
            achievementClub.CompletedDate = completedDate;
            return achievementClub;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementID
        {
            get
            {
                return _AchievementID;
            }
            set
            {
                if (_AchievementID != value)
                {
                    OnAchievementIDChanging(value);
                    ReportPropertyChanging("AchievementID");
                    _AchievementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievementID");
                    OnAchievementIDChanged();
                }
            }
        }
        private global::System.Int32 _AchievementID;
        partial void OnAchievementIDChanging(global::System.Int32 value);
        partial void OnAchievementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CompletedDate
        {
            get
            {
                return _CompletedDate;
            }
            set
            {
                OnCompletedDateChanging(value);
                ReportPropertyChanging("CompletedDate");
                _CompletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedDate");
                OnCompletedDateChanged();
            }
        }
        private global::System.DateTime _CompletedDate;
        partial void OnCompletedDateChanging(global::System.DateTime value);
        partial void OnCompletedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementClub_Achievement", "Achievement")]
        public Achievement Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementClub_Achievement", "Achievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementClub_Achievement", "Achievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Achievement> AchievementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementClub_Achievement", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementClub_Achievement", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementClub_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_AchievementClub_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_AchievementClub_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_AchievementClub_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("KutupYildiziDBModel.FK_AchievementClub_Club", "Club", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="AchievementPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AchievementPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchievementPerson object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="achievementID">Initial value of the AchievementID property.</param>
        /// <param name="completedDate">Initial value of the CompletedDate property.</param>
        public static AchievementPerson CreateAchievementPerson(global::System.Int32 personID, global::System.Int32 achievementID, global::System.DateTime completedDate)
        {
            AchievementPerson achievementPerson = new AchievementPerson();
            achievementPerson.PersonID = personID;
            achievementPerson.AchievementID = achievementID;
            achievementPerson.CompletedDate = completedDate;
            return achievementPerson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementID
        {
            get
            {
                return _AchievementID;
            }
            set
            {
                if (_AchievementID != value)
                {
                    OnAchievementIDChanging(value);
                    ReportPropertyChanging("AchievementID");
                    _AchievementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievementID");
                    OnAchievementIDChanged();
                }
            }
        }
        private global::System.Int32 _AchievementID;
        partial void OnAchievementIDChanging(global::System.Int32 value);
        partial void OnAchievementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CompletedDate
        {
            get
            {
                return _CompletedDate;
            }
            set
            {
                OnCompletedDateChanging(value);
                ReportPropertyChanging("CompletedDate");
                _CompletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedDate");
                OnCompletedDateChanged();
            }
        }
        private global::System.DateTime _CompletedDate;
        partial void OnCompletedDateChanging(global::System.DateTime value);
        partial void OnCompletedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementPerson_Achievement", "Achievement")]
        public Achievement Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementPerson_Achievement", "Achievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementPerson_Achievement", "Achievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Achievement> AchievementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementPerson_Achievement", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Achievement>("KutupYildiziDBModel.FK_AchievementPerson_Achievement", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementPerson_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_AchievementPerson_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_AchievementPerson_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_AchievementPerson_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_AchievementPerson_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="AchievementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AchievementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchievementType object.
        /// </summary>
        /// <param name="achievementTypeID">Initial value of the AchievementTypeID property.</param>
        /// <param name="achievementTypeName">Initial value of the AchievementTypeName property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        /// <param name="columnName">Initial value of the ColumnName property.</param>
        public static AchievementType CreateAchievementType(global::System.Int32 achievementTypeID, global::System.String achievementTypeName, global::System.String tableName, global::System.String columnName)
        {
            AchievementType achievementType = new AchievementType();
            achievementType.AchievementTypeID = achievementTypeID;
            achievementType.AchievementTypeName = achievementTypeName;
            achievementType.TableName = tableName;
            achievementType.ColumnName = columnName;
            return achievementType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementTypeID
        {
            get
            {
                return _AchievementTypeID;
            }
            set
            {
                if (_AchievementTypeID != value)
                {
                    OnAchievementTypeIDChanging(value);
                    ReportPropertyChanging("AchievementTypeID");
                    _AchievementTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievementTypeID");
                    OnAchievementTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AchievementTypeID;
        partial void OnAchievementTypeIDChanging(global::System.Int32 value);
        partial void OnAchievementTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AchievementTypeName
        {
            get
            {
                return _AchievementTypeName;
            }
            set
            {
                OnAchievementTypeNameChanging(value);
                ReportPropertyChanging("AchievementTypeName");
                _AchievementTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AchievementTypeName");
                OnAchievementTypeNameChanged();
            }
        }
        private global::System.String _AchievementTypeName;
        partial void OnAchievementTypeNameChanging(global::System.String value);
        partial void OnAchievementTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Achievement_AchievementType", "Achievement")]
        public EntityCollection<Achievement> Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Achievement>("KutupYildiziDBModel.FK_Achievement_AchievementType", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Achievement>("KutupYildiziDBModel.FK_Achievement_AchievementType", "Achievement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="AdministrativeBoard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdministrativeBoard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdministrativeBoard object.
        /// </summary>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="rolID">Initial value of the RolID property.</param>
        /// <param name="yearStart">Initial value of the YearStart property.</param>
        /// <param name="isArchive">Initial value of the IsArchive property.</param>
        public static AdministrativeBoard CreateAdministrativeBoard(global::System.Int32 clubID, global::System.Int32 personID, global::System.Int32 rolID, global::System.String yearStart, global::System.Boolean isArchive)
        {
            AdministrativeBoard administrativeBoard = new AdministrativeBoard();
            administrativeBoard.ClubID = clubID;
            administrativeBoard.PersonID = personID;
            administrativeBoard.RolID = rolID;
            administrativeBoard.YearStart = yearStart;
            administrativeBoard.IsArchive = isArchive;
            return administrativeBoard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolID
        {
            get
            {
                return _RolID;
            }
            set
            {
                if (_RolID != value)
                {
                    OnRolIDChanging(value);
                    ReportPropertyChanging("RolID");
                    _RolID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RolID");
                    OnRolIDChanged();
                }
            }
        }
        private global::System.Int32 _RolID;
        partial void OnRolIDChanging(global::System.Int32 value);
        partial void OnRolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearStart
        {
            get
            {
                return _YearStart;
            }
            set
            {
                if (_YearStart != value)
                {
                    OnYearStartChanging(value);
                    ReportPropertyChanging("YearStart");
                    _YearStart = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("YearStart");
                    OnYearStartChanged();
                }
            }
        }
        private global::System.String _YearStart;
        partial void OnYearStartChanging(global::System.String value);
        partial void OnYearStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YearEnd
        {
            get
            {
                return _YearEnd;
            }
            set
            {
                OnYearEndChanging(value);
                ReportPropertyChanging("YearEnd");
                _YearEnd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YearEnd");
                OnYearEndChanged();
            }
        }
        private global::System.String _YearEnd;
        partial void OnYearEndChanging(global::System.String value);
        partial void OnYearEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubAdvisorFullName
        {
            get
            {
                return _ClubAdvisorFullName;
            }
            set
            {
                OnClubAdvisorFullNameChanging(value);
                ReportPropertyChanging("ClubAdvisorFullName");
                _ClubAdvisorFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubAdvisorFullName");
                OnClubAdvisorFullNameChanged();
            }
        }
        private global::System.String _ClubAdvisorFullName;
        partial void OnClubAdvisorFullNameChanging(global::System.String value);
        partial void OnClubAdvisorFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsArchive
        {
            get
            {
                return _IsArchive;
            }
            set
            {
                OnIsArchiveChanging(value);
                ReportPropertyChanging("IsArchive");
                _IsArchive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsArchive");
                OnIsArchiveChanged();
            }
        }
        private global::System.Boolean _IsArchive;
        partial void OnIsArchiveChanging(global::System.Boolean value);
        partial void OnIsArchiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AdministrativeBoard_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_AdministrativeBoard_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_AdministrativeBoard_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_AdministrativeBoard_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_AdministrativeBoard_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AdministrativeBoard_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("KutupYildiziDBModel.FK_AdministrativeBoard_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("KutupYildiziDBModel.FK_AdministrativeBoard_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("KutupYildiziDBModel.FK_AdministrativeBoard_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("KutupYildiziDBModel.FK_AdministrativeBoard_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Administrator_Club1", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_Administrator_Club1", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_Administrator_Club1", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_Administrator_Club1", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("KutupYildiziDBModel.FK_Administrator_Club1", "Club", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Club")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Club : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="clubNameTR">Initial value of the ClubNameTR property.</param>
        /// <param name="clubNameENG">Initial value of the ClubNameENG property.</param>
        /// <param name="clubDescTR">Initial value of the ClubDescTR property.</param>
        /// <param name="clubFoundDate">Initial value of the ClubFoundDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="clubMemberCount">Initial value of the ClubMemberCount property.</param>
        /// <param name="clubEventCount">Initial value of the ClubEventCount property.</param>
        /// <param name="clubFollowerCount">Initial value of the ClubFollowerCount property.</param>
        /// <param name="clubShareCount">Initial value of the ClubShareCount property.</param>
        /// <param name="clubEventTotalAttendCount">Initial value of the ClubEventTotalAttendCount property.</param>
        /// <param name="clubSocialMediaCount">Initial value of the ClubSocialMediaCount property.</param>
        /// <param name="clubAchievementCount">Initial value of the ClubAchievementCount property.</param>
        public static Club CreateClub(global::System.Int32 clubID, global::System.String clubNameTR, global::System.String clubNameENG, global::System.String clubDescTR, global::System.DateTime clubFoundDate, global::System.Boolean isActive, global::System.Int32 clubMemberCount, global::System.Int32 clubEventCount, global::System.Int32 clubFollowerCount, global::System.Int32 clubShareCount, global::System.Int32 clubEventTotalAttendCount, global::System.Int32 clubSocialMediaCount, global::System.Int32 clubAchievementCount)
        {
            Club club = new Club();
            club.ClubID = clubID;
            club.ClubNameTR = clubNameTR;
            club.ClubNameENG = clubNameENG;
            club.ClubDescTR = clubDescTR;
            club.ClubFoundDate = clubFoundDate;
            club.IsActive = isActive;
            club.ClubMemberCount = clubMemberCount;
            club.ClubEventCount = clubEventCount;
            club.ClubFollowerCount = clubFollowerCount;
            club.ClubShareCount = clubShareCount;
            club.ClubEventTotalAttendCount = clubEventTotalAttendCount;
            club.ClubSocialMediaCount = clubSocialMediaCount;
            club.ClubAchievementCount = clubAchievementCount;
            return club;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClubNameTR
        {
            get
            {
                return _ClubNameTR;
            }
            set
            {
                OnClubNameTRChanging(value);
                ReportPropertyChanging("ClubNameTR");
                _ClubNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClubNameTR");
                OnClubNameTRChanged();
            }
        }
        private global::System.String _ClubNameTR;
        partial void OnClubNameTRChanging(global::System.String value);
        partial void OnClubNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClubNameENG
        {
            get
            {
                return _ClubNameENG;
            }
            set
            {
                OnClubNameENGChanging(value);
                ReportPropertyChanging("ClubNameENG");
                _ClubNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClubNameENG");
                OnClubNameENGChanged();
            }
        }
        private global::System.String _ClubNameENG;
        partial void OnClubNameENGChanging(global::System.String value);
        partial void OnClubNameENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClubDescTR
        {
            get
            {
                return _ClubDescTR;
            }
            set
            {
                OnClubDescTRChanging(value);
                ReportPropertyChanging("ClubDescTR");
                _ClubDescTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClubDescTR");
                OnClubDescTRChanged();
            }
        }
        private global::System.String _ClubDescTR;
        partial void OnClubDescTRChanging(global::System.String value);
        partial void OnClubDescTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubDescENG
        {
            get
            {
                return _ClubDescENG;
            }
            set
            {
                OnClubDescENGChanging(value);
                ReportPropertyChanging("ClubDescENG");
                _ClubDescENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubDescENG");
                OnClubDescENGChanged();
            }
        }
        private global::System.String _ClubDescENG;
        partial void OnClubDescENGChanging(global::System.String value);
        partial void OnClubDescENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ClubFoundDate
        {
            get
            {
                return _ClubFoundDate;
            }
            set
            {
                OnClubFoundDateChanging(value);
                ReportPropertyChanging("ClubFoundDate");
                _ClubFoundDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubFoundDate");
                OnClubFoundDateChanged();
            }
        }
        private global::System.DateTime _ClubFoundDate;
        partial void OnClubFoundDateChanging(global::System.DateTime value);
        partial void OnClubFoundDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubStatuteTR
        {
            get
            {
                return _ClubStatuteTR;
            }
            set
            {
                OnClubStatuteTRChanging(value);
                ReportPropertyChanging("ClubStatuteTR");
                _ClubStatuteTR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubStatuteTR");
                OnClubStatuteTRChanged();
            }
        }
        private global::System.String _ClubStatuteTR;
        partial void OnClubStatuteTRChanging(global::System.String value);
        partial void OnClubStatuteTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubStatuteENG
        {
            get
            {
                return _ClubStatuteENG;
            }
            set
            {
                OnClubStatuteENGChanging(value);
                ReportPropertyChanging("ClubStatuteENG");
                _ClubStatuteENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubStatuteENG");
                OnClubStatuteENGChanged();
            }
        }
        private global::System.String _ClubStatuteENG;
        partial void OnClubStatuteENGChanging(global::System.String value);
        partial void OnClubStatuteENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubLogoPathTR
        {
            get
            {
                return _ClubLogoPathTR;
            }
            set
            {
                OnClubLogoPathTRChanging(value);
                ReportPropertyChanging("ClubLogoPathTR");
                _ClubLogoPathTR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubLogoPathTR");
                OnClubLogoPathTRChanged();
            }
        }
        private global::System.String _ClubLogoPathTR;
        partial void OnClubLogoPathTRChanging(global::System.String value);
        partial void OnClubLogoPathTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubLogoPathENG
        {
            get
            {
                return _ClubLogoPathENG;
            }
            set
            {
                OnClubLogoPathENGChanging(value);
                ReportPropertyChanging("ClubLogoPathENG");
                _ClubLogoPathENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubLogoPathENG");
                OnClubLogoPathENGChanged();
            }
        }
        private global::System.String _ClubLogoPathENG;
        partial void OnClubLogoPathENGChanging(global::System.String value);
        partial void OnClubLogoPathENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClubAdvisorFullName
        {
            get
            {
                return _ClubAdvisorFullName;
            }
            set
            {
                OnClubAdvisorFullNameChanging(value);
                ReportPropertyChanging("ClubAdvisorFullName");
                _ClubAdvisorFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClubAdvisorFullName");
                OnClubAdvisorFullNameChanged();
            }
        }
        private global::System.String _ClubAdvisorFullName;
        partial void OnClubAdvisorFullNameChanging(global::System.String value);
        partial void OnClubAdvisorFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubMemberCount
        {
            get
            {
                return _ClubMemberCount;
            }
            set
            {
                OnClubMemberCountChanging(value);
                ReportPropertyChanging("ClubMemberCount");
                _ClubMemberCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubMemberCount");
                OnClubMemberCountChanged();
            }
        }
        private global::System.Int32 _ClubMemberCount;
        partial void OnClubMemberCountChanging(global::System.Int32 value);
        partial void OnClubMemberCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubEventCount
        {
            get
            {
                return _ClubEventCount;
            }
            set
            {
                OnClubEventCountChanging(value);
                ReportPropertyChanging("ClubEventCount");
                _ClubEventCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubEventCount");
                OnClubEventCountChanged();
            }
        }
        private global::System.Int32 _ClubEventCount;
        partial void OnClubEventCountChanging(global::System.Int32 value);
        partial void OnClubEventCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubFollowerCount
        {
            get
            {
                return _ClubFollowerCount;
            }
            set
            {
                OnClubFollowerCountChanging(value);
                ReportPropertyChanging("ClubFollowerCount");
                _ClubFollowerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubFollowerCount");
                OnClubFollowerCountChanged();
            }
        }
        private global::System.Int32 _ClubFollowerCount;
        partial void OnClubFollowerCountChanging(global::System.Int32 value);
        partial void OnClubFollowerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubShareCount
        {
            get
            {
                return _ClubShareCount;
            }
            set
            {
                OnClubShareCountChanging(value);
                ReportPropertyChanging("ClubShareCount");
                _ClubShareCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubShareCount");
                OnClubShareCountChanged();
            }
        }
        private global::System.Int32 _ClubShareCount;
        partial void OnClubShareCountChanging(global::System.Int32 value);
        partial void OnClubShareCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubEventTotalAttendCount
        {
            get
            {
                return _ClubEventTotalAttendCount;
            }
            set
            {
                OnClubEventTotalAttendCountChanging(value);
                ReportPropertyChanging("ClubEventTotalAttendCount");
                _ClubEventTotalAttendCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubEventTotalAttendCount");
                OnClubEventTotalAttendCountChanged();
            }
        }
        private global::System.Int32 _ClubEventTotalAttendCount;
        partial void OnClubEventTotalAttendCountChanging(global::System.Int32 value);
        partial void OnClubEventTotalAttendCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubSocialMediaCount
        {
            get
            {
                return _ClubSocialMediaCount;
            }
            set
            {
                OnClubSocialMediaCountChanging(value);
                ReportPropertyChanging("ClubSocialMediaCount");
                _ClubSocialMediaCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubSocialMediaCount");
                OnClubSocialMediaCountChanged();
            }
        }
        private global::System.Int32 _ClubSocialMediaCount;
        partial void OnClubSocialMediaCountChanging(global::System.Int32 value);
        partial void OnClubSocialMediaCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubAchievementCount
        {
            get
            {
                return _ClubAchievementCount;
            }
            set
            {
                OnClubAchievementCountChanging(value);
                ReportPropertyChanging("ClubAchievementCount");
                _ClubAchievementCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubAchievementCount");
                OnClubAchievementCountChanged();
            }
        }
        private global::System.Int32 _ClubAchievementCount;
        partial void OnClubAchievementCountChanging(global::System.Int32 value);
        partial void OnClubAchievementCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementClub_Club", "AchievementClub")]
        public EntityCollection<AchievementClub> AchievementClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementClub>("KutupYildiziDBModel.FK_AchievementClub_Club", "AchievementClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementClub>("KutupYildiziDBModel.FK_AchievementClub_Club", "AchievementClub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Administrator_Club1", "AdministrativeBoard")]
        public EntityCollection<AdministrativeBoard> AdministrativeBoard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdministrativeBoard>("KutupYildiziDBModel.FK_Administrator_Club1", "AdministrativeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdministrativeBoard>("KutupYildiziDBModel.FK_Administrator_Club1", "AdministrativeBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_ClubMember_Club", "ClubMember")]
        public EntityCollection<ClubMember> ClubMember
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClubMember>("KutupYildiziDBModel.FK_ClubMember_Club", "ClubMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClubMember>("KutupYildiziDBModel.FK_ClubMember_Club", "ClubMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Event_Club", "Event")]
        public EntityCollection<Event> Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("KutupYildiziDBModel.FK_Event_Club", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("KutupYildiziDBModel.FK_Event_Club", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaClub_Club", "SocialMediaClub")]
        public EntityCollection<SocialMediaClub> SocialMediaClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialMediaClub>("KutupYildiziDBModel.FK_SocialMediaClub_Club", "SocialMediaClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialMediaClub>("KutupYildiziDBModel.FK_SocialMediaClub_Club", "SocialMediaClub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_UserFollowClub_Club", "PersonFollowClub")]
        public EntityCollection<PersonFollowClub> PersonFollowClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonFollowClub>("KutupYildiziDBModel.FK_UserFollowClub_Club", "PersonFollowClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonFollowClub>("KutupYildiziDBModel.FK_UserFollowClub_Club", "PersonFollowClub", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="ClubMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClubMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClubMember object.
        /// </summary>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ClubMember CreateClubMember(global::System.Int32 clubID, global::System.Int32 personID, global::System.Boolean isActive)
        {
            ClubMember clubMember = new ClubMember();
            clubMember.ClubID = clubID;
            clubMember.PersonID = personID;
            clubMember.IsActive = isActive;
            return clubMember;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_ClubMember_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_ClubMember_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_ClubMember_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_ClubMember_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("KutupYildiziDBModel.FK_ClubMember_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_ClubMember_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_ClubMember_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_ClubMember_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_ClubMember_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_ClubMember_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="departmentNameTR">Initial value of the DepartmentNameTR property.</param>
        /// <param name="departmentNameENG">Initial value of the DepartmentNameENG property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentID, global::System.String departmentNameTR, global::System.String departmentNameENG)
        {
            Department department = new Department();
            department.DepartmentID = departmentID;
            department.DepartmentNameTR = departmentNameTR;
            department.DepartmentNameENG = departmentNameENG;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                if (_DepartmentID != value)
                {
                    OnDepartmentIDChanging(value);
                    ReportPropertyChanging("DepartmentID");
                    _DepartmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentID");
                    OnDepartmentIDChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentNameTR
        {
            get
            {
                return _DepartmentNameTR;
            }
            set
            {
                OnDepartmentNameTRChanging(value);
                ReportPropertyChanging("DepartmentNameTR");
                _DepartmentNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentNameTR");
                OnDepartmentNameTRChanged();
            }
        }
        private global::System.String _DepartmentNameTR;
        partial void OnDepartmentNameTRChanging(global::System.String value);
        partial void OnDepartmentNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentNameENG
        {
            get
            {
                return _DepartmentNameENG;
            }
            set
            {
                OnDepartmentNameENGChanging(value);
                ReportPropertyChanging("DepartmentNameENG");
                _DepartmentNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentNameENG");
                OnDepartmentNameENGChanged();
            }
        }
        private global::System.String _DepartmentNameENG;
        partial void OnDepartmentNameENGChanging(global::System.String value);
        partial void OnDepartmentNameENGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Person_Department", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("KutupYildiziDBModel.FK_Person_Department", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("KutupYildiziDBModel.FK_Person_Department", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="deviceTypeID">Initial value of the DeviceTypeID property.</param>
        public static Device CreateDevice(global::System.Int32 deviceID, global::System.Int32 personID, global::System.Int32 deviceTypeID)
        {
            Device device = new Device();
            device.DeviceID = deviceID;
            device.PersonID = personID;
            device.DeviceTypeID = deviceTypeID;
            return device;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                if (_DeviceID != value)
                {
                    OnDeviceIDChanging(value);
                    ReportPropertyChanging("DeviceID");
                    _DeviceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeviceID");
                    OnDeviceIDChanged();
                }
            }
        }
        private global::System.Int32 _DeviceID;
        partial void OnDeviceIDChanging(global::System.Int32 value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceTypeID
        {
            get
            {
                return _DeviceTypeID;
            }
            set
            {
                OnDeviceTypeIDChanging(value);
                ReportPropertyChanging("DeviceTypeID");
                _DeviceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceTypeID");
                OnDeviceTypeIDChanged();
            }
        }
        private global::System.Int32 _DeviceTypeID;
        partial void OnDeviceTypeIDChanging(global::System.Int32 value);
        partial void OnDeviceTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Device_DeviceType", "DeviceType")]
        public DeviceType DeviceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceType>("KutupYildiziDBModel.FK_Device_DeviceType", "DeviceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceType>("KutupYildiziDBModel.FK_Device_DeviceType", "DeviceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeviceType> DeviceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceType>("KutupYildiziDBModel.FK_Device_DeviceType", "DeviceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeviceType>("KutupYildiziDBModel.FK_Device_DeviceType", "DeviceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Device_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_Device_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_Device_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_Device_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_Device_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="DeviceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceType object.
        /// </summary>
        /// <param name="deviceTypeID">Initial value of the DeviceTypeID property.</param>
        /// <param name="deviceTypeName">Initial value of the DeviceTypeName property.</param>
        public static DeviceType CreateDeviceType(global::System.Int32 deviceTypeID, global::System.String deviceTypeName)
        {
            DeviceType deviceType = new DeviceType();
            deviceType.DeviceTypeID = deviceTypeID;
            deviceType.DeviceTypeName = deviceTypeName;
            return deviceType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceTypeID
        {
            get
            {
                return _DeviceTypeID;
            }
            set
            {
                if (_DeviceTypeID != value)
                {
                    OnDeviceTypeIDChanging(value);
                    ReportPropertyChanging("DeviceTypeID");
                    _DeviceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeviceTypeID");
                    OnDeviceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DeviceTypeID;
        partial void OnDeviceTypeIDChanging(global::System.Int32 value);
        partial void OnDeviceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceTypeName
        {
            get
            {
                return _DeviceTypeName;
            }
            set
            {
                OnDeviceTypeNameChanging(value);
                ReportPropertyChanging("DeviceTypeName");
                _DeviceTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceTypeName");
                OnDeviceTypeNameChanged();
            }
        }
        private global::System.String _DeviceTypeName;
        partial void OnDeviceTypeNameChanging(global::System.String value);
        partial void OnDeviceTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Device_DeviceType", "Device")]
        public EntityCollection<Device> Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("KutupYildiziDBModel.FK_Device_DeviceType", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("KutupYildiziDBModel.FK_Device_DeviceType", "Device", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="eventNameTR">Initial value of the EventNameTR property.</param>
        /// <param name="eventNameENG">Initial value of the EventNameENG property.</param>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="eventPlaceTR">Initial value of the EventPlaceTR property.</param>
        /// <param name="eventHallTR">Initial value of the EventHallTR property.</param>
        /// <param name="eventStartDate">Initial value of the EventStartDate property.</param>
        /// <param name="eventFinishDate">Initial value of the EventFinishDate property.</param>
        /// <param name="eventStartTime">Initial value of the EventStartTime property.</param>
        /// <param name="eventFinishTime">Initial value of the EventFinishTime property.</param>
        /// <param name="eventLastUpdate">Initial value of the EventLastUpdate property.</param>
        /// <param name="eventDescTR">Initial value of the EventDescTR property.</param>
        /// <param name="eventConfirm">Initial value of the EventConfirm property.</param>
        /// <param name="eventAttendCount">Initial value of the EventAttendCount property.</param>
        /// <param name="eventShareCount">Initial value of the EventShareCount property.</param>
        public static Event CreateEvent(global::System.Int32 eventID, global::System.String eventNameTR, global::System.String eventNameENG, global::System.Int32 clubID, global::System.String eventPlaceTR, global::System.String eventHallTR, global::System.DateTime eventStartDate, global::System.DateTime eventFinishDate, global::System.String eventStartTime, global::System.String eventFinishTime, global::System.DateTime eventLastUpdate, global::System.String eventDescTR, global::System.Boolean eventConfirm, global::System.Int32 eventAttendCount, global::System.Int32 eventShareCount)
        {
            Event @event = new Event();
            @event.EventID = eventID;
            @event.EventNameTR = eventNameTR;
            @event.EventNameENG = eventNameENG;
            @event.ClubID = clubID;
            @event.EventPlaceTR = eventPlaceTR;
            @event.EventHallTR = eventHallTR;
            @event.EventStartDate = eventStartDate;
            @event.EventFinishDate = eventFinishDate;
            @event.EventStartTime = eventStartTime;
            @event.EventFinishTime = eventFinishTime;
            @event.EventLastUpdate = eventLastUpdate;
            @event.EventDescTR = eventDescTR;
            @event.EventConfirm = eventConfirm;
            @event.EventAttendCount = eventAttendCount;
            @event.EventShareCount = eventShareCount;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventNameTR
        {
            get
            {
                return _EventNameTR;
            }
            set
            {
                OnEventNameTRChanging(value);
                ReportPropertyChanging("EventNameTR");
                _EventNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventNameTR");
                OnEventNameTRChanged();
            }
        }
        private global::System.String _EventNameTR;
        partial void OnEventNameTRChanging(global::System.String value);
        partial void OnEventNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventNameENG
        {
            get
            {
                return _EventNameENG;
            }
            set
            {
                OnEventNameENGChanging(value);
                ReportPropertyChanging("EventNameENG");
                _EventNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventNameENG");
                OnEventNameENGChanged();
            }
        }
        private global::System.String _EventNameENG;
        partial void OnEventNameENGChanging(global::System.String value);
        partial void OnEventNameENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                OnClubIDChanging(value);
                ReportPropertyChanging("ClubID");
                _ClubID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubID");
                OnClubIDChanged();
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventPlaceTR
        {
            get
            {
                return _EventPlaceTR;
            }
            set
            {
                OnEventPlaceTRChanging(value);
                ReportPropertyChanging("EventPlaceTR");
                _EventPlaceTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventPlaceTR");
                OnEventPlaceTRChanged();
            }
        }
        private global::System.String _EventPlaceTR;
        partial void OnEventPlaceTRChanging(global::System.String value);
        partial void OnEventPlaceTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventPlaceENG
        {
            get
            {
                return _EventPlaceENG;
            }
            set
            {
                OnEventPlaceENGChanging(value);
                ReportPropertyChanging("EventPlaceENG");
                _EventPlaceENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventPlaceENG");
                OnEventPlaceENGChanged();
            }
        }
        private global::System.String _EventPlaceENG;
        partial void OnEventPlaceENGChanging(global::System.String value);
        partial void OnEventPlaceENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventHallTR
        {
            get
            {
                return _EventHallTR;
            }
            set
            {
                OnEventHallTRChanging(value);
                ReportPropertyChanging("EventHallTR");
                _EventHallTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventHallTR");
                OnEventHallTRChanged();
            }
        }
        private global::System.String _EventHallTR;
        partial void OnEventHallTRChanging(global::System.String value);
        partial void OnEventHallTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventHallENG
        {
            get
            {
                return _EventHallENG;
            }
            set
            {
                OnEventHallENGChanging(value);
                ReportPropertyChanging("EventHallENG");
                _EventHallENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventHallENG");
                OnEventHallENGChanged();
            }
        }
        private global::System.String _EventHallENG;
        partial void OnEventHallENGChanging(global::System.String value);
        partial void OnEventHallENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventStartDate
        {
            get
            {
                return _EventStartDate;
            }
            set
            {
                OnEventStartDateChanging(value);
                ReportPropertyChanging("EventStartDate");
                _EventStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventStartDate");
                OnEventStartDateChanged();
            }
        }
        private global::System.DateTime _EventStartDate;
        partial void OnEventStartDateChanging(global::System.DateTime value);
        partial void OnEventStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventFinishDate
        {
            get
            {
                return _EventFinishDate;
            }
            set
            {
                OnEventFinishDateChanging(value);
                ReportPropertyChanging("EventFinishDate");
                _EventFinishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventFinishDate");
                OnEventFinishDateChanged();
            }
        }
        private global::System.DateTime _EventFinishDate;
        partial void OnEventFinishDateChanging(global::System.DateTime value);
        partial void OnEventFinishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventStartTime
        {
            get
            {
                return _EventStartTime;
            }
            set
            {
                OnEventStartTimeChanging(value);
                ReportPropertyChanging("EventStartTime");
                _EventStartTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventStartTime");
                OnEventStartTimeChanged();
            }
        }
        private global::System.String _EventStartTime;
        partial void OnEventStartTimeChanging(global::System.String value);
        partial void OnEventStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventFinishTime
        {
            get
            {
                return _EventFinishTime;
            }
            set
            {
                OnEventFinishTimeChanging(value);
                ReportPropertyChanging("EventFinishTime");
                _EventFinishTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventFinishTime");
                OnEventFinishTimeChanged();
            }
        }
        private global::System.String _EventFinishTime;
        partial void OnEventFinishTimeChanging(global::System.String value);
        partial void OnEventFinishTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventLastUpdate
        {
            get
            {
                return _EventLastUpdate;
            }
            set
            {
                OnEventLastUpdateChanging(value);
                ReportPropertyChanging("EventLastUpdate");
                _EventLastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventLastUpdate");
                OnEventLastUpdateChanged();
            }
        }
        private global::System.DateTime _EventLastUpdate;
        partial void OnEventLastUpdateChanging(global::System.DateTime value);
        partial void OnEventLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventPosterLink
        {
            get
            {
                return _EventPosterLink;
            }
            set
            {
                OnEventPosterLinkChanging(value);
                ReportPropertyChanging("EventPosterLink");
                _EventPosterLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventPosterLink");
                OnEventPosterLinkChanged();
            }
        }
        private global::System.String _EventPosterLink;
        partial void OnEventPosterLinkChanging(global::System.String value);
        partial void OnEventPosterLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDescTR
        {
            get
            {
                return _EventDescTR;
            }
            set
            {
                OnEventDescTRChanging(value);
                ReportPropertyChanging("EventDescTR");
                _EventDescTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventDescTR");
                OnEventDescTRChanged();
            }
        }
        private global::System.String _EventDescTR;
        partial void OnEventDescTRChanging(global::System.String value);
        partial void OnEventDescTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventDescENG
        {
            get
            {
                return _EventDescENG;
            }
            set
            {
                OnEventDescENGChanging(value);
                ReportPropertyChanging("EventDescENG");
                _EventDescENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventDescENG");
                OnEventDescENGChanged();
            }
        }
        private global::System.String _EventDescENG;
        partial void OnEventDescENGChanging(global::System.String value);
        partial void OnEventDescENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EventConfirm
        {
            get
            {
                return _EventConfirm;
            }
            set
            {
                OnEventConfirmChanging(value);
                ReportPropertyChanging("EventConfirm");
                _EventConfirm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventConfirm");
                OnEventConfirmChanged();
            }
        }
        private global::System.Boolean _EventConfirm;
        partial void OnEventConfirmChanging(global::System.Boolean value);
        partial void OnEventConfirmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventAttendCount
        {
            get
            {
                return _EventAttendCount;
            }
            set
            {
                OnEventAttendCountChanging(value);
                ReportPropertyChanging("EventAttendCount");
                _EventAttendCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventAttendCount");
                OnEventAttendCountChanged();
            }
        }
        private global::System.Int32 _EventAttendCount;
        partial void OnEventAttendCountChanging(global::System.Int32 value);
        partial void OnEventAttendCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventShareCount
        {
            get
            {
                return _EventShareCount;
            }
            set
            {
                OnEventShareCountChanging(value);
                ReportPropertyChanging("EventShareCount");
                _EventShareCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventShareCount");
                OnEventShareCountChanged();
            }
        }
        private global::System.Int32 _EventShareCount;
        partial void OnEventShareCountChanging(global::System.Int32 value);
        partial void OnEventShareCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Event_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_Event_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_Event_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_Event_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("KutupYildiziDBModel.FK_Event_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_UserEventAttend_Event", "PersonEventAttend")]
        public EntityCollection<PersonEventAttend> PersonEventAttend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEventAttend>("KutupYildiziDBModel.FK_UserEventAttend_Event", "PersonEventAttend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEventAttend>("KutupYildiziDBModel.FK_UserEventAttend_Event", "PersonEventAttend", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="GlobalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalType object.
        /// </summary>
        /// <param name="globalTypeID">Initial value of the GlobalTypeID property.</param>
        /// <param name="globalTypeName">Initial value of the GlobalTypeName property.</param>
        public static GlobalType CreateGlobalType(global::System.Int32 globalTypeID, global::System.String globalTypeName)
        {
            GlobalType globalType = new GlobalType();
            globalType.GlobalTypeID = globalTypeID;
            globalType.GlobalTypeName = globalTypeName;
            return globalType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalTypeID
        {
            get
            {
                return _GlobalTypeID;
            }
            set
            {
                if (_GlobalTypeID != value)
                {
                    OnGlobalTypeIDChanging(value);
                    ReportPropertyChanging("GlobalTypeID");
                    _GlobalTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GlobalTypeID");
                    OnGlobalTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _GlobalTypeID;
        partial void OnGlobalTypeIDChanging(global::System.Int32 value);
        partial void OnGlobalTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GlobalTypeName
        {
            get
            {
                return _GlobalTypeName;
            }
            set
            {
                OnGlobalTypeNameChanging(value);
                ReportPropertyChanging("GlobalTypeName");
                _GlobalTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GlobalTypeName");
                OnGlobalTypeNameChanged();
            }
        }
        private global::System.String _GlobalTypeName;
        partial void OnGlobalTypeNameChanging(global::System.String value);
        partial void OnGlobalTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Achievement_GlobalType", "Achievement")]
        public EntityCollection<Achievement> Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Achievement>("KutupYildiziDBModel.FK_Achievement_GlobalType", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Achievement>("KutupYildiziDBModel.FK_Achievement_GlobalType", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Result_GlobalType", "Result")]
        public EntityCollection<Result> Result
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("KutupYildiziDBModel.FK_Result_GlobalType", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("KutupYildiziDBModel.FK_Result_GlobalType", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Timeline_GlobalType1", "Timeline")]
        public EntityCollection<Timeline> Timeline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Timeline>("KutupYildiziDBModel.FK_Timeline_GlobalType1", "Timeline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Timeline>("KutupYildiziDBModel.FK_Timeline_GlobalType1", "Timeline", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="personFName">Initial value of the PersonFName property.</param>
        /// <param name="personLName">Initial value of the PersonLName property.</param>
        /// <param name="personEmail">Initial value of the PersonEmail property.</param>
        /// <param name="universityID">Initial value of the UniversityID property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="personEventAttendCount">Initial value of the PersonEventAttendCount property.</param>
        /// <param name="personShareCount">Initial value of the PersonShareCount property.</param>
        /// <param name="personClubFollowCount">Initial value of the PersonClubFollowCount property.</param>
        /// <param name="personClubMemberCount">Initial value of the PersonClubMemberCount property.</param>
        /// <param name="personSocialMediaCount">Initial value of the PersonSocialMediaCount property.</param>
        /// <param name="personDeviceCount">Initial value of the PersonDeviceCount property.</param>
        /// <param name="personAchievementCount">Initial value of the PersonAchievementCount property.</param>
        /// <param name="personPassword">Initial value of the PersonPassword property.</param>
        /// <param name="personPhone">Initial value of the PersonPhone property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isHide">Initial value of the IsHide property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.String personFName, global::System.String personLName, global::System.String personEmail, global::System.Int32 universityID, global::System.Int32 departmentID, global::System.Int32 personEventAttendCount, global::System.Int32 personShareCount, global::System.Int32 personClubFollowCount, global::System.Int32 personClubMemberCount, global::System.Int32 personSocialMediaCount, global::System.Int32 personDeviceCount, global::System.Int32 personAchievementCount, global::System.String personPassword, global::System.String personPhone, global::System.Boolean isActive, global::System.Boolean isHide, global::System.Int32 roleID)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.PersonFName = personFName;
            person.PersonLName = personLName;
            person.PersonEmail = personEmail;
            person.UniversityID = universityID;
            person.DepartmentID = departmentID;
            person.PersonEventAttendCount = personEventAttendCount;
            person.PersonShareCount = personShareCount;
            person.PersonClubFollowCount = personClubFollowCount;
            person.PersonClubMemberCount = personClubMemberCount;
            person.PersonSocialMediaCount = personSocialMediaCount;
            person.PersonDeviceCount = personDeviceCount;
            person.PersonAchievementCount = personAchievementCount;
            person.PersonPassword = personPassword;
            person.PersonPhone = personPhone;
            person.IsActive = isActive;
            person.IsHide = isHide;
            person.RoleID = roleID;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonFName
        {
            get
            {
                return _PersonFName;
            }
            set
            {
                OnPersonFNameChanging(value);
                ReportPropertyChanging("PersonFName");
                _PersonFName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonFName");
                OnPersonFNameChanged();
            }
        }
        private global::System.String _PersonFName;
        partial void OnPersonFNameChanging(global::System.String value);
        partial void OnPersonFNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonLName
        {
            get
            {
                return _PersonLName;
            }
            set
            {
                OnPersonLNameChanging(value);
                ReportPropertyChanging("PersonLName");
                _PersonLName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonLName");
                OnPersonLNameChanged();
            }
        }
        private global::System.String _PersonLName;
        partial void OnPersonLNameChanging(global::System.String value);
        partial void OnPersonLNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonEmail
        {
            get
            {
                return _PersonEmail;
            }
            set
            {
                OnPersonEmailChanging(value);
                ReportPropertyChanging("PersonEmail");
                _PersonEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonEmail");
                OnPersonEmailChanged();
            }
        }
        private global::System.String _PersonEmail;
        partial void OnPersonEmailChanging(global::System.String value);
        partial void OnPersonEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniversityID
        {
            get
            {
                return _UniversityID;
            }
            set
            {
                OnUniversityIDChanging(value);
                ReportPropertyChanging("UniversityID");
                _UniversityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversityID");
                OnUniversityIDChanged();
            }
        }
        private global::System.Int32 _UniversityID;
        partial void OnUniversityIDChanging(global::System.Int32 value);
        partial void OnUniversityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonEventAttendCount
        {
            get
            {
                return _PersonEventAttendCount;
            }
            set
            {
                OnPersonEventAttendCountChanging(value);
                ReportPropertyChanging("PersonEventAttendCount");
                _PersonEventAttendCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonEventAttendCount");
                OnPersonEventAttendCountChanged();
            }
        }
        private global::System.Int32 _PersonEventAttendCount;
        partial void OnPersonEventAttendCountChanging(global::System.Int32 value);
        partial void OnPersonEventAttendCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonShareCount
        {
            get
            {
                return _PersonShareCount;
            }
            set
            {
                OnPersonShareCountChanging(value);
                ReportPropertyChanging("PersonShareCount");
                _PersonShareCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonShareCount");
                OnPersonShareCountChanged();
            }
        }
        private global::System.Int32 _PersonShareCount;
        partial void OnPersonShareCountChanging(global::System.Int32 value);
        partial void OnPersonShareCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonClubFollowCount
        {
            get
            {
                return _PersonClubFollowCount;
            }
            set
            {
                OnPersonClubFollowCountChanging(value);
                ReportPropertyChanging("PersonClubFollowCount");
                _PersonClubFollowCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonClubFollowCount");
                OnPersonClubFollowCountChanged();
            }
        }
        private global::System.Int32 _PersonClubFollowCount;
        partial void OnPersonClubFollowCountChanging(global::System.Int32 value);
        partial void OnPersonClubFollowCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonClubMemberCount
        {
            get
            {
                return _PersonClubMemberCount;
            }
            set
            {
                OnPersonClubMemberCountChanging(value);
                ReportPropertyChanging("PersonClubMemberCount");
                _PersonClubMemberCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonClubMemberCount");
                OnPersonClubMemberCountChanged();
            }
        }
        private global::System.Int32 _PersonClubMemberCount;
        partial void OnPersonClubMemberCountChanging(global::System.Int32 value);
        partial void OnPersonClubMemberCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonSocialMediaCount
        {
            get
            {
                return _PersonSocialMediaCount;
            }
            set
            {
                OnPersonSocialMediaCountChanging(value);
                ReportPropertyChanging("PersonSocialMediaCount");
                _PersonSocialMediaCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonSocialMediaCount");
                OnPersonSocialMediaCountChanged();
            }
        }
        private global::System.Int32 _PersonSocialMediaCount;
        partial void OnPersonSocialMediaCountChanging(global::System.Int32 value);
        partial void OnPersonSocialMediaCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonDeviceCount
        {
            get
            {
                return _PersonDeviceCount;
            }
            set
            {
                OnPersonDeviceCountChanging(value);
                ReportPropertyChanging("PersonDeviceCount");
                _PersonDeviceCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonDeviceCount");
                OnPersonDeviceCountChanged();
            }
        }
        private global::System.Int32 _PersonDeviceCount;
        partial void OnPersonDeviceCountChanging(global::System.Int32 value);
        partial void OnPersonDeviceCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonAchievementCount
        {
            get
            {
                return _PersonAchievementCount;
            }
            set
            {
                OnPersonAchievementCountChanging(value);
                ReportPropertyChanging("PersonAchievementCount");
                _PersonAchievementCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonAchievementCount");
                OnPersonAchievementCountChanged();
            }
        }
        private global::System.Int32 _PersonAchievementCount;
        partial void OnPersonAchievementCountChanging(global::System.Int32 value);
        partial void OnPersonAchievementCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonPassword
        {
            get
            {
                return _PersonPassword;
            }
            set
            {
                OnPersonPasswordChanging(value);
                ReportPropertyChanging("PersonPassword");
                _PersonPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonPassword");
                OnPersonPasswordChanged();
            }
        }
        private global::System.String _PersonPassword;
        partial void OnPersonPasswordChanging(global::System.String value);
        partial void OnPersonPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonPhone
        {
            get
            {
                return _PersonPhone;
            }
            set
            {
                OnPersonPhoneChanging(value);
                ReportPropertyChanging("PersonPhone");
                _PersonPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonPhone");
                OnPersonPhoneChanged();
            }
        }
        private global::System.String _PersonPhone;
        partial void OnPersonPhoneChanging(global::System.String value);
        partial void OnPersonPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHide
        {
            get
            {
                return _IsHide;
            }
            set
            {
                OnIsHideChanging(value);
                ReportPropertyChanging("IsHide");
                _IsHide = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHide");
                OnIsHideChanged();
            }
        }
        private global::System.Boolean _IsHide;
        partial void OnIsHideChanging(global::System.Boolean value);
        partial void OnIsHideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AchievementPerson_Person", "AchievementPerson")]
        public EntityCollection<AchievementPerson> AchievementPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementPerson>("KutupYildiziDBModel.FK_AchievementPerson_Person", "AchievementPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementPerson>("KutupYildiziDBModel.FK_AchievementPerson_Person", "AchievementPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AdministrativeBoard_Person", "AdministrativeBoard")]
        public EntityCollection<AdministrativeBoard> AdministrativeBoard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdministrativeBoard>("KutupYildiziDBModel.FK_AdministrativeBoard_Person", "AdministrativeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdministrativeBoard>("KutupYildiziDBModel.FK_AdministrativeBoard_Person", "AdministrativeBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_ClubMember_Person", "ClubMember")]
        public EntityCollection<ClubMember> ClubMember
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClubMember>("KutupYildiziDBModel.FK_ClubMember_Person", "ClubMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClubMember>("KutupYildiziDBModel.FK_ClubMember_Person", "ClubMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Person_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KutupYildiziDBModel.FK_Person_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KutupYildiziDBModel.FK_Person_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("KutupYildiziDBModel.FK_Person_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("KutupYildiziDBModel.FK_Person_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Device_Person", "Device")]
        public EntityCollection<Device> Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("KutupYildiziDBModel.FK_Device_Person", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("KutupYildiziDBModel.FK_Device_Person", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Person_University", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("KutupYildiziDBModel.FK_Person_University", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("KutupYildiziDBModel.FK_Person_University", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("KutupYildiziDBModel.FK_Person_University", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("KutupYildiziDBModel.FK_Person_University", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_PersonEventAttend_Person", "PersonEventAttend")]
        public EntityCollection<PersonEventAttend> PersonEventAttend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEventAttend>("KutupYildiziDBModel.FK_PersonEventAttend_Person", "PersonEventAttend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEventAttend>("KutupYildiziDBModel.FK_PersonEventAttend_Person", "PersonEventAttend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_PersonFollowClub_Person", "PersonFollowClub")]
        public EntityCollection<PersonFollowClub> PersonFollowClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonFollowClub>("KutupYildiziDBModel.FK_PersonFollowClub_Person", "PersonFollowClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonFollowClub>("KutupYildiziDBModel.FK_PersonFollowClub_Person", "PersonFollowClub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaPerson_Person", "SocialMediaPerson")]
        public EntityCollection<SocialMediaPerson> SocialMediaPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialMediaPerson>("KutupYildiziDBModel.FK_SocialMediaPerson_Person", "SocialMediaPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialMediaPerson>("KutupYildiziDBModel.FK_SocialMediaPerson_Person", "SocialMediaPerson", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="PersonEventAttend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonEventAttend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonEventAttend object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static PersonEventAttend CreatePersonEventAttend(global::System.Int32 personID, global::System.Int32 eventID)
        {
            PersonEventAttend personEventAttend = new PersonEventAttend();
            personEventAttend.PersonID = personID;
            personEventAttend.EventID = eventID;
            return personEventAttend;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FollowDate
        {
            get
            {
                return _FollowDate;
            }
            set
            {
                OnFollowDateChanging(value);
                ReportPropertyChanging("FollowDate");
                _FollowDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FollowDate");
                OnFollowDateChanged();
            }
        }
        private global::System.String _FollowDate;
        partial void OnFollowDateChanging(global::System.String value);
        partial void OnFollowDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_UserEventAttend_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("KutupYildiziDBModel.FK_UserEventAttend_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("KutupYildiziDBModel.FK_UserEventAttend_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("KutupYildiziDBModel.FK_UserEventAttend_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("KutupYildiziDBModel.FK_UserEventAttend_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_PersonEventAttend_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_PersonEventAttend_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_PersonEventAttend_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_PersonEventAttend_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_PersonEventAttend_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="PersonFollowClub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonFollowClub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonFollowClub object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        public static PersonFollowClub CreatePersonFollowClub(global::System.Int32 personID, global::System.Int32 clubID)
        {
            PersonFollowClub personFollowClub = new PersonFollowClub();
            personFollowClub.PersonID = personID;
            personFollowClub.ClubID = clubID;
            return personFollowClub;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FollowDate
        {
            get
            {
                return _FollowDate;
            }
            set
            {
                OnFollowDateChanging(value);
                ReportPropertyChanging("FollowDate");
                _FollowDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FollowDate");
                OnFollowDateChanged();
            }
        }
        private global::System.String _FollowDate;
        partial void OnFollowDateChanging(global::System.String value);
        partial void OnFollowDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_UserFollowClub_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_UserFollowClub_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_UserFollowClub_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_UserFollowClub_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("KutupYildiziDBModel.FK_UserFollowClub_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_PersonFollowClub_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_PersonFollowClub_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_PersonFollowClub_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_PersonFollowClub_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_PersonFollowClub_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="globalID">Initial value of the GlobalID property.</param>
        /// <param name="globalTypeID">Initial value of the GlobalTypeID property.</param>
        /// <param name="resultTypeID">Initial value of the ResultTypeID property.</param>
        /// <param name="resultPoint">Initial value of the ResultPoint property.</param>
        public static Result CreateResult(global::System.Int32 globalID, global::System.Int32 globalTypeID, global::System.Int32 resultTypeID, global::System.Int32 resultPoint)
        {
            Result result = new Result();
            result.GlobalID = globalID;
            result.GlobalTypeID = globalTypeID;
            result.ResultTypeID = resultTypeID;
            result.ResultPoint = resultPoint;
            return result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalID
        {
            get
            {
                return _GlobalID;
            }
            set
            {
                if (_GlobalID != value)
                {
                    OnGlobalIDChanging(value);
                    ReportPropertyChanging("GlobalID");
                    _GlobalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GlobalID");
                    OnGlobalIDChanged();
                }
            }
        }
        private global::System.Int32 _GlobalID;
        partial void OnGlobalIDChanging(global::System.Int32 value);
        partial void OnGlobalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalTypeID
        {
            get
            {
                return _GlobalTypeID;
            }
            set
            {
                if (_GlobalTypeID != value)
                {
                    OnGlobalTypeIDChanging(value);
                    ReportPropertyChanging("GlobalTypeID");
                    _GlobalTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GlobalTypeID");
                    OnGlobalTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _GlobalTypeID;
        partial void OnGlobalTypeIDChanging(global::System.Int32 value);
        partial void OnGlobalTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultTypeID
        {
            get
            {
                return _ResultTypeID;
            }
            set
            {
                if (_ResultTypeID != value)
                {
                    OnResultTypeIDChanging(value);
                    ReportPropertyChanging("ResultTypeID");
                    _ResultTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultTypeID");
                    OnResultTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultTypeID;
        partial void OnResultTypeIDChanging(global::System.Int32 value);
        partial void OnResultTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultPoint
        {
            get
            {
                return _ResultPoint;
            }
            set
            {
                OnResultPointChanging(value);
                ReportPropertyChanging("ResultPoint");
                _ResultPoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultPoint");
                OnResultPointChanged();
            }
        }
        private global::System.Int32 _ResultPoint;
        partial void OnResultPointChanging(global::System.Int32 value);
        partial void OnResultPointChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Result_GlobalType", "GlobalType")]
        public GlobalType GlobalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Result_GlobalType", "GlobalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Result_GlobalType", "GlobalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GlobalType> GlobalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Result_GlobalType", "GlobalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Result_GlobalType", "GlobalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Result_ResultType", "ResultType")]
        public ResultType ResultType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultType>("KutupYildiziDBModel.FK_Result_ResultType", "ResultType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultType>("KutupYildiziDBModel.FK_Result_ResultType", "ResultType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResultType> ResultTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultType>("KutupYildiziDBModel.FK_Result_ResultType", "ResultType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResultType>("KutupYildiziDBModel.FK_Result_ResultType", "ResultType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="ResultType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultType object.
        /// </summary>
        /// <param name="resultTypeID">Initial value of the ResultTypeID property.</param>
        /// <param name="resultTypeNameTR">Initial value of the ResultTypeNameTR property.</param>
        /// <param name="resultTypeNameENG">Initial value of the ResultTypeNameENG property.</param>
        public static ResultType CreateResultType(global::System.Int32 resultTypeID, global::System.String resultTypeNameTR, global::System.String resultTypeNameENG)
        {
            ResultType resultType = new ResultType();
            resultType.ResultTypeID = resultTypeID;
            resultType.ResultTypeNameTR = resultTypeNameTR;
            resultType.ResultTypeNameENG = resultTypeNameENG;
            return resultType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultTypeID
        {
            get
            {
                return _ResultTypeID;
            }
            set
            {
                if (_ResultTypeID != value)
                {
                    OnResultTypeIDChanging(value);
                    ReportPropertyChanging("ResultTypeID");
                    _ResultTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultTypeID");
                    OnResultTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ResultTypeID;
        partial void OnResultTypeIDChanging(global::System.Int32 value);
        partial void OnResultTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultTypeNameTR
        {
            get
            {
                return _ResultTypeNameTR;
            }
            set
            {
                OnResultTypeNameTRChanging(value);
                ReportPropertyChanging("ResultTypeNameTR");
                _ResultTypeNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResultTypeNameTR");
                OnResultTypeNameTRChanged();
            }
        }
        private global::System.String _ResultTypeNameTR;
        partial void OnResultTypeNameTRChanging(global::System.String value);
        partial void OnResultTypeNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultTypeNameENG
        {
            get
            {
                return _ResultTypeNameENG;
            }
            set
            {
                OnResultTypeNameENGChanging(value);
                ReportPropertyChanging("ResultTypeNameENG");
                _ResultTypeNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResultTypeNameENG");
                OnResultTypeNameENGChanged();
            }
        }
        private global::System.String _ResultTypeNameENG;
        partial void OnResultTypeNameENGChanging(global::System.String value);
        partial void OnResultTypeNameENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultTypeIconURL
        {
            get
            {
                return _ResultTypeIconURL;
            }
            set
            {
                OnResultTypeIconURLChanging(value);
                ReportPropertyChanging("ResultTypeIconURL");
                _ResultTypeIconURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultTypeIconURL");
                OnResultTypeIconURLChanged();
            }
        }
        private global::System.String _ResultTypeIconURL;
        partial void OnResultTypeIconURLChanging(global::System.String value);
        partial void OnResultTypeIconURLChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Achievement_ResultType", "Achievement")]
        public EntityCollection<Achievement> Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Achievement>("KutupYildiziDBModel.FK_Achievement_ResultType", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Achievement>("KutupYildiziDBModel.FK_Achievement_ResultType", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Result_ResultType", "Result")]
        public EntityCollection<Result> Result
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("KutupYildiziDBModel.FK_Result_ResultType", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("KutupYildiziDBModel.FK_Result_ResultType", "Result", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleNameTR">Initial value of the RoleNameTR property.</param>
        /// <param name="roleNameENG">Initial value of the RoleNameENG property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleNameTR, global::System.String roleNameENG)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleNameTR = roleNameTR;
            role.RoleNameENG = roleNameENG;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleNameTR
        {
            get
            {
                return _RoleNameTR;
            }
            set
            {
                OnRoleNameTRChanging(value);
                ReportPropertyChanging("RoleNameTR");
                _RoleNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleNameTR");
                OnRoleNameTRChanged();
            }
        }
        private global::System.String _RoleNameTR;
        partial void OnRoleNameTRChanging(global::System.String value);
        partial void OnRoleNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleNameENG
        {
            get
            {
                return _RoleNameENG;
            }
            set
            {
                OnRoleNameENGChanging(value);
                ReportPropertyChanging("RoleNameENG");
                _RoleNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleNameENG");
                OnRoleNameENGChanged();
            }
        }
        private global::System.String _RoleNameENG;
        partial void OnRoleNameENGChanging(global::System.String value);
        partial void OnRoleNameENGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_AdministrativeBoard_Role", "AdministrativeBoard")]
        public EntityCollection<AdministrativeBoard> AdministrativeBoard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdministrativeBoard>("KutupYildiziDBModel.FK_AdministrativeBoard_Role", "AdministrativeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdministrativeBoard>("KutupYildiziDBModel.FK_AdministrativeBoard_Role", "AdministrativeBoard", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="SocialMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialMedia object.
        /// </summary>
        /// <param name="socialMediaID">Initial value of the SocialMediaID property.</param>
        /// <param name="socialMediaName">Initial value of the SocialMediaName property.</param>
        /// <param name="socialMediaLink">Initial value of the SocialMediaLink property.</param>
        /// <param name="socialMediaLogo">Initial value of the SocialMediaLogo property.</param>
        public static SocialMedia CreateSocialMedia(global::System.Int32 socialMediaID, global::System.String socialMediaName, global::System.String socialMediaLink, global::System.String socialMediaLogo)
        {
            SocialMedia socialMedia = new SocialMedia();
            socialMedia.SocialMediaID = socialMediaID;
            socialMedia.SocialMediaName = socialMediaName;
            socialMedia.SocialMediaLink = socialMediaLink;
            socialMedia.SocialMediaLogo = socialMediaLogo;
            return socialMedia;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SocialMediaID
        {
            get
            {
                return _SocialMediaID;
            }
            set
            {
                if (_SocialMediaID != value)
                {
                    OnSocialMediaIDChanging(value);
                    ReportPropertyChanging("SocialMediaID");
                    _SocialMediaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SocialMediaID");
                    OnSocialMediaIDChanged();
                }
            }
        }
        private global::System.Int32 _SocialMediaID;
        partial void OnSocialMediaIDChanging(global::System.Int32 value);
        partial void OnSocialMediaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SocialMediaName
        {
            get
            {
                return _SocialMediaName;
            }
            set
            {
                OnSocialMediaNameChanging(value);
                ReportPropertyChanging("SocialMediaName");
                _SocialMediaName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SocialMediaName");
                OnSocialMediaNameChanged();
            }
        }
        private global::System.String _SocialMediaName;
        partial void OnSocialMediaNameChanging(global::System.String value);
        partial void OnSocialMediaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SocialMediaLink
        {
            get
            {
                return _SocialMediaLink;
            }
            set
            {
                OnSocialMediaLinkChanging(value);
                ReportPropertyChanging("SocialMediaLink");
                _SocialMediaLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SocialMediaLink");
                OnSocialMediaLinkChanged();
            }
        }
        private global::System.String _SocialMediaLink;
        partial void OnSocialMediaLinkChanging(global::System.String value);
        partial void OnSocialMediaLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SocialMediaLogo
        {
            get
            {
                return _SocialMediaLogo;
            }
            set
            {
                OnSocialMediaLogoChanging(value);
                ReportPropertyChanging("SocialMediaLogo");
                _SocialMediaLogo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SocialMediaLogo");
                OnSocialMediaLogoChanged();
            }
        }
        private global::System.String _SocialMediaLogo;
        partial void OnSocialMediaLogoChanging(global::System.String value);
        partial void OnSocialMediaLogoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaClub_SocialMedia", "SocialMediaClub")]
        public EntityCollection<SocialMediaClub> SocialMediaClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialMediaClub>("KutupYildiziDBModel.FK_SocialMediaClub_SocialMedia", "SocialMediaClub");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialMediaClub>("KutupYildiziDBModel.FK_SocialMediaClub_SocialMedia", "SocialMediaClub", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaPerson_SocialMedia", "SocialMediaPerson")]
        public EntityCollection<SocialMediaPerson> SocialMediaPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialMediaPerson>("KutupYildiziDBModel.FK_SocialMediaPerson_SocialMedia", "SocialMediaPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialMediaPerson>("KutupYildiziDBModel.FK_SocialMediaPerson_SocialMedia", "SocialMediaPerson", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="SocialMediaClub")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialMediaClub : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialMediaClub object.
        /// </summary>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="socialMediaID">Initial value of the SocialMediaID property.</param>
        /// <param name="socialMediaClubName">Initial value of the SocialMediaClubName property.</param>
        public static SocialMediaClub CreateSocialMediaClub(global::System.Int32 clubID, global::System.Int32 socialMediaID, global::System.String socialMediaClubName)
        {
            SocialMediaClub socialMediaClub = new SocialMediaClub();
            socialMediaClub.ClubID = clubID;
            socialMediaClub.SocialMediaID = socialMediaID;
            socialMediaClub.SocialMediaClubName = socialMediaClubName;
            return socialMediaClub;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SocialMediaID
        {
            get
            {
                return _SocialMediaID;
            }
            set
            {
                if (_SocialMediaID != value)
                {
                    OnSocialMediaIDChanging(value);
                    ReportPropertyChanging("SocialMediaID");
                    _SocialMediaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SocialMediaID");
                    OnSocialMediaIDChanged();
                }
            }
        }
        private global::System.Int32 _SocialMediaID;
        partial void OnSocialMediaIDChanging(global::System.Int32 value);
        partial void OnSocialMediaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SocialMediaClubName
        {
            get
            {
                return _SocialMediaClubName;
            }
            set
            {
                OnSocialMediaClubNameChanging(value);
                ReportPropertyChanging("SocialMediaClubName");
                _SocialMediaClubName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SocialMediaClubName");
                OnSocialMediaClubNameChanged();
            }
        }
        private global::System.String _SocialMediaClubName;
        partial void OnSocialMediaClubNameChanging(global::System.String value);
        partial void OnSocialMediaClubNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaClub_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_SocialMediaClub_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_SocialMediaClub_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("KutupYildiziDBModel.FK_SocialMediaClub_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("KutupYildiziDBModel.FK_SocialMediaClub_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaClub_SocialMedia", "SocialMedia")]
        public SocialMedia SocialMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaClub_SocialMedia", "SocialMedia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaClub_SocialMedia", "SocialMedia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialMedia> SocialMediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaClub_SocialMedia", "SocialMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaClub_SocialMedia", "SocialMedia", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="SocialMediaPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialMediaPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialMediaPerson object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="socialMediaID">Initial value of the SocialMediaID property.</param>
        /// <param name="socialMediaPersonName">Initial value of the SocialMediaPersonName property.</param>
        public static SocialMediaPerson CreateSocialMediaPerson(global::System.Int32 personID, global::System.Int32 socialMediaID, global::System.String socialMediaPersonName)
        {
            SocialMediaPerson socialMediaPerson = new SocialMediaPerson();
            socialMediaPerson.PersonID = personID;
            socialMediaPerson.SocialMediaID = socialMediaID;
            socialMediaPerson.SocialMediaPersonName = socialMediaPersonName;
            return socialMediaPerson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SocialMediaID
        {
            get
            {
                return _SocialMediaID;
            }
            set
            {
                if (_SocialMediaID != value)
                {
                    OnSocialMediaIDChanging(value);
                    ReportPropertyChanging("SocialMediaID");
                    _SocialMediaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SocialMediaID");
                    OnSocialMediaIDChanged();
                }
            }
        }
        private global::System.Int32 _SocialMediaID;
        partial void OnSocialMediaIDChanging(global::System.Int32 value);
        partial void OnSocialMediaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SocialMediaPersonName
        {
            get
            {
                return _SocialMediaPersonName;
            }
            set
            {
                OnSocialMediaPersonNameChanging(value);
                ReportPropertyChanging("SocialMediaPersonName");
                _SocialMediaPersonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SocialMediaPersonName");
                OnSocialMediaPersonNameChanged();
            }
        }
        private global::System.String _SocialMediaPersonName;
        partial void OnSocialMediaPersonNameChanging(global::System.String value);
        partial void OnSocialMediaPersonNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaPerson_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_SocialMediaPerson_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_SocialMediaPerson_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("KutupYildiziDBModel.FK_SocialMediaPerson_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("KutupYildiziDBModel.FK_SocialMediaPerson_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_SocialMediaPerson_SocialMedia", "SocialMedia")]
        public SocialMedia SocialMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaPerson_SocialMedia", "SocialMedia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaPerson_SocialMedia", "SocialMedia").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialMedia> SocialMediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaPerson_SocialMedia", "SocialMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialMedia>("KutupYildiziDBModel.FK_SocialMediaPerson_SocialMedia", "SocialMedia", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="Timeline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Timeline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Timeline object.
        /// </summary>
        /// <param name="timelineID">Initial value of the TimelineID property.</param>
        /// <param name="timelineEntryTR">Initial value of the TimelineEntryTR property.</param>
        /// <param name="timelineEntryENG">Initial value of the TimelineEntryENG property.</param>
        /// <param name="timelineEntryDate">Initial value of the TimelineEntryDate property.</param>
        /// <param name="globalID">Initial value of the GlobalID property.</param>
        /// <param name="globalTypeID">Initial value of the GlobalTypeID property.</param>
        public static Timeline CreateTimeline(global::System.Int32 timelineID, global::System.String timelineEntryTR, global::System.String timelineEntryENG, global::System.DateTime timelineEntryDate, global::System.Int32 globalID, global::System.Int32 globalTypeID)
        {
            Timeline timeline = new Timeline();
            timeline.TimelineID = timelineID;
            timeline.TimelineEntryTR = timelineEntryTR;
            timeline.TimelineEntryENG = timelineEntryENG;
            timeline.TimelineEntryDate = timelineEntryDate;
            timeline.GlobalID = globalID;
            timeline.GlobalTypeID = globalTypeID;
            return timeline;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimelineID
        {
            get
            {
                return _TimelineID;
            }
            set
            {
                if (_TimelineID != value)
                {
                    OnTimelineIDChanging(value);
                    ReportPropertyChanging("TimelineID");
                    _TimelineID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimelineID");
                    OnTimelineIDChanged();
                }
            }
        }
        private global::System.Int32 _TimelineID;
        partial void OnTimelineIDChanging(global::System.Int32 value);
        partial void OnTimelineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TimelineEntryTR
        {
            get
            {
                return _TimelineEntryTR;
            }
            set
            {
                OnTimelineEntryTRChanging(value);
                ReportPropertyChanging("TimelineEntryTR");
                _TimelineEntryTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TimelineEntryTR");
                OnTimelineEntryTRChanged();
            }
        }
        private global::System.String _TimelineEntryTR;
        partial void OnTimelineEntryTRChanging(global::System.String value);
        partial void OnTimelineEntryTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TimelineEntryENG
        {
            get
            {
                return _TimelineEntryENG;
            }
            set
            {
                OnTimelineEntryENGChanging(value);
                ReportPropertyChanging("TimelineEntryENG");
                _TimelineEntryENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TimelineEntryENG");
                OnTimelineEntryENGChanged();
            }
        }
        private global::System.String _TimelineEntryENG;
        partial void OnTimelineEntryENGChanging(global::System.String value);
        partial void OnTimelineEntryENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimelineEntryDate
        {
            get
            {
                return _TimelineEntryDate;
            }
            set
            {
                OnTimelineEntryDateChanging(value);
                ReportPropertyChanging("TimelineEntryDate");
                _TimelineEntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimelineEntryDate");
                OnTimelineEntryDateChanged();
            }
        }
        private global::System.DateTime _TimelineEntryDate;
        partial void OnTimelineEntryDateChanging(global::System.DateTime value);
        partial void OnTimelineEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalID
        {
            get
            {
                return _GlobalID;
            }
            set
            {
                OnGlobalIDChanging(value);
                ReportPropertyChanging("GlobalID");
                _GlobalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GlobalID");
                OnGlobalIDChanged();
            }
        }
        private global::System.Int32 _GlobalID;
        partial void OnGlobalIDChanging(global::System.Int32 value);
        partial void OnGlobalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalTypeID
        {
            get
            {
                return _GlobalTypeID;
            }
            set
            {
                OnGlobalTypeIDChanging(value);
                ReportPropertyChanging("GlobalTypeID");
                _GlobalTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GlobalTypeID");
                OnGlobalTypeIDChanged();
            }
        }
        private global::System.Int32 _GlobalTypeID;
        partial void OnGlobalTypeIDChanging(global::System.Int32 value);
        partial void OnGlobalTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Timeline_GlobalType1", "GlobalType")]
        public GlobalType GlobalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Timeline_GlobalType1", "GlobalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Timeline_GlobalType1", "GlobalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GlobalType> GlobalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Timeline_GlobalType1", "GlobalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GlobalType>("KutupYildiziDBModel.FK_Timeline_GlobalType1", "GlobalType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KutupYildiziDBModel", Name="University")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class University : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new University object.
        /// </summary>
        /// <param name="universityID">Initial value of the UniversityID property.</param>
        /// <param name="universityNameTR">Initial value of the UniversityNameTR property.</param>
        /// <param name="universityNameENG">Initial value of the UniversityNameENG property.</param>
        public static University CreateUniversity(global::System.Int32 universityID, global::System.String universityNameTR, global::System.String universityNameENG)
        {
            University university = new University();
            university.UniversityID = universityID;
            university.UniversityNameTR = universityNameTR;
            university.UniversityNameENG = universityNameENG;
            return university;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniversityID
        {
            get
            {
                return _UniversityID;
            }
            set
            {
                if (_UniversityID != value)
                {
                    OnUniversityIDChanging(value);
                    ReportPropertyChanging("UniversityID");
                    _UniversityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UniversityID");
                    OnUniversityIDChanged();
                }
            }
        }
        private global::System.Int32 _UniversityID;
        partial void OnUniversityIDChanging(global::System.Int32 value);
        partial void OnUniversityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityNameTR
        {
            get
            {
                return _UniversityNameTR;
            }
            set
            {
                OnUniversityNameTRChanging(value);
                ReportPropertyChanging("UniversityNameTR");
                _UniversityNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityNameTR");
                OnUniversityNameTRChanged();
            }
        }
        private global::System.String _UniversityNameTR;
        partial void OnUniversityNameTRChanging(global::System.String value);
        partial void OnUniversityNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityNameENG
        {
            get
            {
                return _UniversityNameENG;
            }
            set
            {
                OnUniversityNameENGChanging(value);
                ReportPropertyChanging("UniversityNameENG");
                _UniversityNameENG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityNameENG");
                OnUniversityNameENGChanged();
            }
        }
        private global::System.String _UniversityNameENG;
        partial void OnUniversityNameENGChanging(global::System.String value);
        partial void OnUniversityNameENGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KutupYildiziDBModel", "FK_Person_University", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("KutupYildiziDBModel.FK_Person_University", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("KutupYildiziDBModel.FK_Person_University", "Person", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
